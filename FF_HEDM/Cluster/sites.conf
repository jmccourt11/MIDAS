#
# Copyright (c) 2014, UChicago Argonne, LLC
# See LICENSE file.
#

site.local {
	execution {
		type: "local"
		URL: "localhost"
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: ${env.nNODES}
	initialParallelTasks: ${env.nNODES}
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
}

site.orthrosall {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:sge"
		options {
			nodeGranularity: ${env.nNODES}
			jobQueue: "sec1all.q"
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			jobOptions.ppn: 64
			jobOptions.pe: "sec1_all"
			highOverallocation: 100
			maxJobTime: "76:00:00"
			lowOverallocation: 100
			tasksPerNode: 64
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "10:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "10:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "13:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.orthrosregular {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:sge"
		options {
			nodeGranularity: ${env.nNODES}
			jobQueue: "sec1reg.q"
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			jobOptions.ppn: 64
			jobOptions.pe: "sec1_reg"
			highOverallocation: 100
			maxJobTime: "76:00:00"
			lowOverallocation: 100
			tasksPerNode: 64
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "23:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.orthrosextra {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:sge"
		options {
			nodeGranularity: ${env.nNODES}
			jobQueue: "sec1extra.q"
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			jobOptions.ppn: 16
			jobOptions.pe: "sec1_extra"
			highOverallocation: 100
			maxJobTime: "76:00:00"
			lowOverallocation: 100
			tasksPerNode: 16
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "10:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "10:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "23:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.orthrosnew {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:sge"
		options {
			nodeGranularity: ${env.nNODES}
			jobQueue: "sec1new7.q"
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			jobOptions.ppn: 32
			jobOptions.pe: "sec1new7"
			highOverallocation: 100
			maxJobTime: "176:00:00"
			lowOverallocation: 100
			tasksPerNode: 32
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "23:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "13:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:13:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.upitt {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 28
			maxJobTime: "48:20:00"
			jobOptions.slurm.cluster : "mpi"
			jobQueue: "opa-high-mem"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "03:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:13:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.edison_realtime {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			internalHostName: ${env.intHN}
			tasksPerNode: 24
			maxJobTime: "03:50:00"
			jobOptions.slurm.account : "m3019"
			jobQueue: "realtime"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:10:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "01:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "01:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "01:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.cori_realtime {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			internalHostName: ${env.intHN}
			jobOptions.slurm.constraint : "haswell"
			tasksPerNode: 32
			maxJobTime: "03:50:00"
			jobOptions.slurm.account : "m3019"
			jobQueue: "realtime"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.biocluster {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: ${env.nNODES}
			tasksPerNode: 24
			jobOptions {
				"mem-per-cpu": "1G"
			}
			maxJobTime: "36:00:00"
			jobQueue: "batch"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "05:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.conte {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:pbs"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: ${env.nNODES}
			jobQueue: "msangid"
			jobOptions.ppn: 16
			highOverallocation: 100
			maxJobTime: "36:00:00"
			lowOverallocation: 100
			tasksPerNode: 16
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.rice {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:pbs"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: ${env.nNODES}
			jobQueue: "msangid"
			jobOptions.ppn: 20
			highOverallocation: 100
			maxJobTime: "36:00:00"
			lowOverallocation: 100
			tasksPerNode: 20
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.brown {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:pbs"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: ${env.nNODES}
			jobQueue: "mokuniew"
			jobOptions.ppn: 24
			highOverallocation: 100
			maxJobTime: "36:00:00"
			lowOverallocation: 100
			tasksPerNode: 24
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.halstead {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:pbs"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: ${env.nNODES}
			jobQueue: "mokuniew"
			jobOptions.ppn: 20
			highOverallocation: 100
			maxJobTime: "36:00:00"
			lowOverallocation: 100
			tasksPerNode: 20
		}
	}
	filesystem {
		type: "local"
		URL: "localhost"
	}
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:40:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:50:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.darwin {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: 1
			maxNodesPerJob: 1
			maxJobs: 1
			jobOptions.slurm.nodelist : "cn[232]"
			tasksPerNode: 72
			maxJobTime: "100:00:00"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.bebop {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 36
			maxJobTime: "20:20:00"
			jobQueue: "bdwall"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:05:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "00:10:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "02:02:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "02:02:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "02:02:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "04:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:10:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:10:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:10:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:00:10"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.blues_priority {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 16
			maxJobTime: "14:20:00"
			jobQueue: "priority" # partition
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: "/temp/"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:05:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "00:10:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "02:02:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "10:02:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "02:02:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "14:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:10:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:10:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:10:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:00:10"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.blues_preempt {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 16
			maxJobTime: "20:20:00"
			jobQueue: "preemptable"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:05:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "00:10:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "02:02:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "02:02:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "02:02:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "04:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:10:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:10:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:10:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:00:10"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.stampede_normal {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 16
			maxJobTime: "04:20:00"
			jobQueue: "normal"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:02:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "00:05:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:02:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "00:20:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "00:20:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "00:20:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:10:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:10:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:10:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:00:10"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.stampede_largemem {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 32
			maxJobTime: "04:20:00"
			jobQueue: "largemem"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:02:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "00:05:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:02:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "00:20:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "00:20:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "00:20:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:10:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:10:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:10:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:00:10"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.notchpeak {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 32
			maxJobTime: "34:20:00"
			jobOptions.slurm.account : "solidmech-np"
			jobQueue: "solidmech-np"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:02:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "00:05:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:02:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "00:20:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "04:20:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "00:20:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "14:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:10:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:10:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:10:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:00:10"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.mio {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 24
			maxJobTime: "04:20:00"
			jobOptions.slurm.account : "bkappes"
			jobQueue: "bkappes"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:02:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "00:05:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:02:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:10:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "00:20:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "00:20:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "00:20:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:10:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:10:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:10:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:00:10"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.azure_test {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 60
			maxJobTime: "03:50:00"
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:20:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.halstead_sangid {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 20
			maxJobTime: "10:00:00"
			jobOptions.slurm.account : "msangid"
			jobQueue: "msangid" # partition
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:40:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "02:00:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:20:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:50:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "03:00:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "03:00:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "03:00:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:30:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:03:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:20:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:05:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:20:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:20:00"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.um_hpc {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 16
			maxJobTime: "24:00:00"
			jobOptions.slurm.account : "prisms_project"
			jobQueue: "prismsproject" # partition
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:05:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "00:10:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "02:02:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "01:02:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "02:02:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "04:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:10:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:10:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:10:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:00:10"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.um_great_lakes {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 36
			maxJobTime: "5:00:00"
			jobOptions.slurm.account : "abucsek1"
			jobQueue: "standard" # partition
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:05:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "00:10:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "02:02:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "01:02:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "02:02:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "02:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:10:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:10:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:10:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:00:10"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.cades {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 36
			maxJobTime: "5:00:00"
			jobOptions.slurm.account : "birthright"
			jobOptions.slurm.mem : "32G"
			jobQueue: "high_mem_cd" # partition
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:05:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "00:10:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "02:02:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "01:02:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "02:02:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "02:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:10:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:10:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:10:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:00:10"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}

site.unh {
	execution {
		type: "coaster"
		URL: "localhost"
		jobManager: "local:slurm"
		options {
			nodeGranularity: ${env.nNODES}
			maxNodesPerJob: ${env.nNODES}
			maxJobs: 1
			tasksPerNode: 32
			maxJobTime: "5:00:00"
			#jobOptions.slurm.account : "birthright"
			jobQueue: "thrust2" # partition
			highOverallocation: 100
			lowOverallocation: 100
		}
	}
	staging : "local"
	workDirectory: ${env.HOME}"/swiftwork"
	maxParallelTasks: 1000
	initialParallelTasks: 999
	app.indexstrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexStrains.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "01:50:00"
	}
	app.mergeDetectors {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeDetectors.sh"
		maxWallTime: "00:20:00"
	}
	app.mergeRings {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/MergeRings.sh"
		maxWallTime: "00:05:00"
	}
	app.processGrains {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessGrains.sh"
		maxWallTime: "00:10:00"
	}
	app.postPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PostPeaksSHM.sh"
		maxWallTime: "00:05:00"
	}
	app.strainsrefine {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/StrainsRefine.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:05:00"
	}
	app.peakstracking {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/bin/PeaksFittingPerFile"
		maxWallTime: "02:02:00"
	}
	app.peaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/Peaks.sh"
		maxWallTime: "01:02:00"
	}
	app.peaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/PeaksHydra.sh"
		maxWallTime: "02:02:00"
	}
	app.processPeaks {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaks.sh"
		maxWallTime: "01:20:00"
	}
	app.processPeaksHydra {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/ProcessPeaksHydra.sh"
		maxWallTime: "01:20:00"
	}
	app.fitorientation {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/FitOrientation.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/binsNF_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "02:00:00"
	}
	app.runmedianparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MedianImageParallel.sh"
		maxWallTime: "00:50:00"
	}
	app.runimageprocessingparallel {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/ImageProcessingParallel.sh"
		maxWallTime: "00:10:00"
	}
	app.mmaps {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/mmap.sh"
		maxWallTime: "00:10:00"
	}
	app.micparser {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/MicParser.sh"
		maxWallTime: "00:10:00"
	}
	app.setupNF {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/initialsetup.sh"
		maxWallTime: "00:10:00"
	}
	app.echo {
		executable: "/bin/echo"
		maxWallTime: "00:00:10"
	}
	app.echo2 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder.sh"
		maxWallTime: "00:20:00"
	}
	app.echo3 {
		executable: ${env.HOME}"/opt/MIDAS/NF_HEDM/Cluster/placeHolder2.sh"
		maxWallTime: "00:20:00"
	}
	app.indexrefinescanning {
		executable: ${env.HOME}"/opt/MIDAS/FF_HEDM/Cluster/IndexRefineScanning.sh"
		options.softImage=${env.HOME}"/swiftwork/bins/bins_"${env.MACHINE_NAME}".tar.gz /dev/shm"
		maxWallTime: "00:20:00"
	}
}


lazyErrors: false
executionRetries: 0
keepSiteDir: true
wrapperParameterMode: "args"
alwaysTransferWrapperLog: false
maxForeachThreads: 1000
